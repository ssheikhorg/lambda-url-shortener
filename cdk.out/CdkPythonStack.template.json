{
 "Resources": {
  "MyRoleF48FFE04": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    }
   },
   "Metadata": {
    "aws:cdk:path": "CdkPythonStack/MyRole/Resource"
   }
  },
  "MyRoleDefaultPolicyA36BE1DD": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "apigatewayv2:*",
        "cloudwatch:*",
        "iam:*",
        "lambda:*",
        "s3:*"
       ],
       "Effect": "Allow",
       "Resource": "*"
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "MyRoleDefaultPolicyA36BE1DD",
    "Roles": [
     {
      "Ref": "MyRoleF48FFE04"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "CdkPythonStack/MyRole/DefaultPolicy/Resource"
   }
  },
  "MyFirstBucketB8884501": {
   "Type": "AWS::S3::Bucket",
   "Properties": {
    "Tags": [
     {
      "Key": "aws-cdk:auto-delete-objects",
      "Value": "true"
     }
    ],
    "VersioningConfiguration": {
     "Status": "Enabled"
    }
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "CdkPythonStack/MyFirstBucket/Resource"
   }
  },
  "MyFirstBucketPolicy3243DEFD": {
   "Type": "AWS::S3::BucketPolicy",
   "Properties": {
    "Bucket": {
     "Ref": "MyFirstBucketB8884501"
    },
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "s3:DeleteObject*",
        "s3:GetBucket*",
        "s3:List*"
       ],
       "Effect": "Allow",
       "Principal": {
        "AWS": {
         "Fn::GetAtt": [
          "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092",
          "Arn"
         ]
        }
       },
       "Resource": [
        {
         "Fn::GetAtt": [
          "MyFirstBucketB8884501",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "MyFirstBucketB8884501",
             "Arn"
            ]
           },
           "/*"
          ]
         ]
        }
       ]
      }
     ],
     "Version": "2012-10-17"
    }
   },
   "Metadata": {
    "aws:cdk:path": "CdkPythonStack/MyFirstBucket/Policy/Resource"
   }
  },
  "MyFirstBucketAutoDeleteObjectsCustomResourceC52FCF6E": {
   "Type": "Custom::S3AutoDeleteObjects",
   "Properties": {
    "ServiceToken": {
     "Fn::GetAtt": [
      "CustomS3AutoDeleteObjectsCustomResourceProviderHandler9D90184F",
      "Arn"
     ]
    },
    "BucketName": {
     "Ref": "MyFirstBucketB8884501"
    }
   },
   "DependsOn": [
    "MyFirstBucketPolicy3243DEFD"
   ],
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "CdkPythonStack/MyFirstBucket/AutoDeleteObjectsCustomResource/Default"
   }
  },
  "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Version": "2012-10-17",
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ]
    },
    "ManagedPolicyArns": [
     {
      "Fn::Sub": "arn:${AWS::Partition}:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "CdkPythonStack/Custom::S3AutoDeleteObjectsCustomResourceProvider/Role"
   }
  },
  "CustomS3AutoDeleteObjectsCustomResourceProviderHandler9D90184F": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": {
      "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
     },
     "S3Key": "0758db37a61ce7177f50559cad0340df233a2001b5880615afa517203dd67c21.zip"
    },
    "Timeout": 900,
    "MemorySize": 128,
    "Handler": "__entrypoint__.handler",
    "Role": {
     "Fn::GetAtt": [
      "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092",
      "Arn"
     ]
    },
    "Runtime": "nodejs12.x",
    "Description": {
     "Fn::Join": [
      "",
      [
       "Lambda function for auto-deleting objects in ",
       {
        "Ref": "MyFirstBucketB8884501"
       },
       " S3 bucket."
      ]
     ]
    }
   },
   "DependsOn": [
    "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092"
   ],
   "Metadata": {
    "aws:cdk:path": "CdkPythonStack/Custom::S3AutoDeleteObjectsCustomResourceProvider/Handler",
    "aws:asset:path": "asset.0758db37a61ce7177f50559cad0340df233a2001b5880615afa517203dd67c21",
    "aws:asset:property": "Code"
   }
  },
  "MyFunction3BAA72D1": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": {
      "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
     },
     "S3Key": "a9709bac383e00a85fff7c7cc804c827a4fc9857e5430de1f96bba50dbaa3b82.zip"
    },
    "Role": {
     "Fn::GetAtt": [
      "MyRoleF48FFE04",
      "Arn"
     ]
    },
    "Handler": "index.handler",
    "Runtime": "python3.9"
   },
   "DependsOn": [
    "MyRoleDefaultPolicyA36BE1DD",
    "MyRoleF48FFE04"
   ],
   "Metadata": {
    "aws:cdk:path": "CdkPythonStack/MyFunction/Resource",
    "aws:asset:path": "asset.a9709bac383e00a85fff7c7cc804c827a4fc9857e5430de1f96bba50dbaa3b82",
    "aws:asset:is-bundled": false,
    "aws:asset:property": "Code"
   }
  },
  "MyAPI5C779B6E": {
   "Type": "AWS::ApiGateway::RestApi",
   "Properties": {
    "Name": "MyAPI"
   },
   "Metadata": {
    "aws:cdk:path": "CdkPythonStack/MyAPI/Resource"
   }
  },
  "MyAPICloudWatchRole2982FFAE": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "apigateway.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AmazonAPIGatewayPushToCloudWatchLogs"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "CdkPythonStack/MyAPI/CloudWatchRole/Resource"
   }
  },
  "MyAPIAccount3A52C897": {
   "Type": "AWS::ApiGateway::Account",
   "Properties": {
    "CloudWatchRoleArn": {
     "Fn::GetAtt": [
      "MyAPICloudWatchRole2982FFAE",
      "Arn"
     ]
    }
   },
   "DependsOn": [
    "MyAPI5C779B6E"
   ],
   "Metadata": {
    "aws:cdk:path": "CdkPythonStack/MyAPI/Account"
   }
  },
  "MyAPIDeployment1F3E49D443d7d172072d9fa5c76bcc7e3fb50ba3": {
   "Type": "AWS::ApiGateway::Deployment",
   "Properties": {
    "RestApiId": {
     "Ref": "MyAPI5C779B6E"
    },
    "Description": "Automatically created by the RestApi construct"
   },
   "DependsOn": [
    "MyAPIproxyANYD31F03EA",
    "MyAPIproxy6DB81EB1",
    "MyAPIANY40373677"
   ],
   "Metadata": {
    "aws:cdk:path": "CdkPythonStack/MyAPI/Deployment/Resource"
   }
  },
  "MyAPIDeploymentStagedev21D7B2F8": {
   "Type": "AWS::ApiGateway::Stage",
   "Properties": {
    "RestApiId": {
     "Ref": "MyAPI5C779B6E"
    },
    "DeploymentId": {
     "Ref": "MyAPIDeployment1F3E49D443d7d172072d9fa5c76bcc7e3fb50ba3"
    },
    "StageName": "dev"
   },
   "DependsOn": [
    "MyAPIAccount3A52C897"
   ],
   "Metadata": {
    "aws:cdk:path": "CdkPythonStack/MyAPI/DeploymentStage.dev/Resource"
   }
  },
  "MyAPIproxy6DB81EB1": {
   "Type": "AWS::ApiGateway::Resource",
   "Properties": {
    "ParentId": {
     "Fn::GetAtt": [
      "MyAPI5C779B6E",
      "RootResourceId"
     ]
    },
    "PathPart": "{proxy+}",
    "RestApiId": {
     "Ref": "MyAPI5C779B6E"
    }
   },
   "Metadata": {
    "aws:cdk:path": "CdkPythonStack/MyAPI/Default/{proxy+}/Resource"
   }
  },
  "MyAPIproxyANYApiPermissionCdkPythonStackMyAPIF66BBC1FANYproxyCB9629A9": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "MyFunction3BAA72D1",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:",
       {
        "Ref": "AWS::Region"
       },
       ":",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "MyAPI5C779B6E"
       },
       "/",
       {
        "Ref": "MyAPIDeploymentStagedev21D7B2F8"
       },
       "/*/*"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "CdkPythonStack/MyAPI/Default/{proxy+}/ANY/ApiPermission.CdkPythonStackMyAPIF66BBC1F.ANY..{proxy+}"
   }
  },
  "MyAPIproxyANYApiPermissionTestCdkPythonStackMyAPIF66BBC1FANYproxyB247E6FC": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "MyFunction3BAA72D1",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:",
       {
        "Ref": "AWS::Region"
       },
       ":",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "MyAPI5C779B6E"
       },
       "/test-invoke-stage/*/*"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "CdkPythonStack/MyAPI/Default/{proxy+}/ANY/ApiPermission.Test.CdkPythonStackMyAPIF66BBC1F.ANY..{proxy+}"
   }
  },
  "MyAPIproxyANYD31F03EA": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "HttpMethod": "ANY",
    "ResourceId": {
     "Ref": "MyAPIproxy6DB81EB1"
    },
    "RestApiId": {
     "Ref": "MyAPI5C779B6E"
    },
    "AuthorizationType": "NONE",
    "Integration": {
     "IntegrationHttpMethod": "POST",
     "Type": "AWS_PROXY",
     "Uri": {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":apigateway:",
        {
         "Ref": "AWS::Region"
        },
        ":lambda:path/2015-03-31/functions/",
        {
         "Fn::GetAtt": [
          "MyFunction3BAA72D1",
          "Arn"
         ]
        },
        "/invocations"
       ]
      ]
     }
    }
   },
   "Metadata": {
    "aws:cdk:path": "CdkPythonStack/MyAPI/Default/{proxy+}/ANY/Resource"
   }
  },
  "MyAPIANYApiPermissionCdkPythonStackMyAPIF66BBC1FANYFED569C4": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "MyFunction3BAA72D1",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:",
       {
        "Ref": "AWS::Region"
       },
       ":",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "MyAPI5C779B6E"
       },
       "/",
       {
        "Ref": "MyAPIDeploymentStagedev21D7B2F8"
       },
       "/*/"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "CdkPythonStack/MyAPI/Default/ANY/ApiPermission.CdkPythonStackMyAPIF66BBC1F.ANY.."
   }
  },
  "MyAPIANYApiPermissionTestCdkPythonStackMyAPIF66BBC1FANY3A67A6F2": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "MyFunction3BAA72D1",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:",
       {
        "Ref": "AWS::Region"
       },
       ":",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "MyAPI5C779B6E"
       },
       "/test-invoke-stage/*/"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "CdkPythonStack/MyAPI/Default/ANY/ApiPermission.Test.CdkPythonStackMyAPIF66BBC1F.ANY.."
   }
  },
  "MyAPIANY40373677": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "HttpMethod": "ANY",
    "ResourceId": {
     "Fn::GetAtt": [
      "MyAPI5C779B6E",
      "RootResourceId"
     ]
    },
    "RestApiId": {
     "Ref": "MyAPI5C779B6E"
    },
    "AuthorizationType": "NONE",
    "Integration": {
     "IntegrationHttpMethod": "POST",
     "Type": "AWS_PROXY",
     "Uri": {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":apigateway:",
        {
         "Ref": "AWS::Region"
        },
        ":lambda:path/2015-03-31/functions/",
        {
         "Fn::GetAtt": [
          "MyFunction3BAA72D1",
          "Arn"
         ]
        },
        "/invocations"
       ]
      ]
     }
    }
   },
   "Metadata": {
    "aws:cdk:path": "CdkPythonStack/MyAPI/Default/ANY/Resource"
   }
  },
  "CDKMetadata": {
   "Type": "AWS::CDK::Metadata",
   "Properties": {
    "Analytics": "v2:deflate64:H4sIAAAAAAAA/21Py07DMBD8lt4dA404cEyDOIGIwgdUrrOEbWI7iteUyMq/40dRW4nTzKzHsztbvn3k9xtxsoXshmLEA/cfJOTAwmjvUSjuWzMCqz91wsaMKJcoM1uZLbnfOTkAxemZZbiYb3QWO2FhZaNQh05w/+K0JDQ6mq95A7NCa4OKm/bCWiDLqwhMTNgLgpNYuH9NOS1YqiZM115oJaVxmtgzTKNZFOh06ZUKjftUMZPw1bhZQryQNbP5Wf4m5+DM34C+TBdHma0rq50lo/513z6F1G/sYGapSVyLuo/+d0eTS/fVRndIqXizhHx9V/In/lBujhaxmEMhVMDbjL9VUXzAyAEAAA=="
   },
   "Metadata": {
    "aws:cdk:path": "CdkPythonStack/CDKMetadata/Default"
   },
   "Condition": "CDKMetadataAvailable"
  }
 },
 "Outputs": {
  "MyAPIEndpoint3D9AE6B4": {
   "Value": {
    "Fn::Join": [
     "",
     [
      "https://",
      {
       "Ref": "MyAPI5C779B6E"
      },
      ".execute-api.",
      {
       "Ref": "AWS::Region"
      },
      ".",
      {
       "Ref": "AWS::URLSuffix"
      },
      "/",
      {
       "Ref": "MyAPIDeploymentStagedev21D7B2F8"
      },
      "/"
     ]
    ]
   }
  },
  "ShortenerUrl": {
   "Value": {
    "Fn::Join": [
     "",
     [
      "https://",
      {
       "Ref": "MyAPI5C779B6E"
      },
      ".execute-api.",
      {
       "Ref": "AWS::Region"
      },
      ".",
      {
       "Ref": "AWS::URLSuffix"
      },
      "/",
      {
       "Ref": "MyAPIDeploymentStagedev21D7B2F8"
      },
      "/"
     ]
    ]
   }
  },
  "BucketName": {
   "Value": {
    "Ref": "MyFirstBucketB8884501"
   }
  },
  "FunctionName": {
   "Value": {
    "Ref": "MyFunction3BAA72D1"
   }
  },
  "FunctionArn": {
   "Value": {
    "Fn::GetAtt": [
     "MyFunction3BAA72D1",
     "Arn"
    ]
   }
  },
  "ServiceAccountIamRole": {
   "Value": {
    "Fn::GetAtt": [
     "MyRoleF48FFE04",
     "Arn"
    ]
   }
  }
 },
 "Conditions": {
  "CDKMetadataAvailable": {
   "Fn::Or": [
    {
     "Fn::Or": [
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "af-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-east-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-northeast-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-northeast-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-southeast-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-southeast-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ca-central-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "cn-north-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "cn-northwest-1"
       ]
      }
     ]
    },
    {
     "Fn::Or": [
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-central-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-north-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-west-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-west-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-west-3"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "me-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "sa-east-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-east-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-east-2"
       ]
      }
     ]
    },
    {
     "Fn::Or": [
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-west-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-west-2"
       ]
      }
     ]
    }
   ]
  }
 },
 "Parameters": {
  "BootstrapVersion": {
   "Type": "AWS::SSM::Parameter::Value<String>",
   "Default": "/cdk-bootstrap/hnb659fds/version",
   "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]"
  }
 },
 "Rules": {
  "CheckBootstrapVersion": {
   "Assertions": [
    {
     "Assert": {
      "Fn::Not": [
       {
        "Fn::Contains": [
         [
          "1",
          "2",
          "3",
          "4",
          "5"
         ],
         {
          "Ref": "BootstrapVersion"
         }
        ]
       }
      ]
     },
     "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI."
    }
   ]
  }
 }
}